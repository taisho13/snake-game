{"version":3,"sources":["components/Navigation.js","components/ManipulationPanel.js","components/Field.js","components/Button.js","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","Field","fields","map","row","column","Button","onStop","onStart","status","onRestart","getFoodPostion","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","OppositeDirection","Delta","DirectionKeyCodeMap","37","38","39","40","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","tick","setTick","direction","setDirection","setDiffculty","useEffect","interval","setInterval","handleMoving","onChangeDirection","useCallback","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","position","delta","newPosition","isEatingMyself","newBody","removingTrack","pop","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3616cb81.chunk.js","sourcesContent":["import React  from 'react';\n\nconst Navigation = ({length,difficulty = 3,onChangeDifficulty}) => {\n\n    const upVisibility = difficulty < 5 ? '' : 'is-hidden'\n   const downVisibility = difficulty > 1 ? '' : 'is-hidden'\n   const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\n   const onDownDifficulty = () => onChangeDifficulty(difficulty -1)\n   \n    return(\n        <div className = 'navigation'>\n            <div className = 'navigation-item'>\n                <span className = 'navigation-lavel'>Length:</span>\n                <div className = 'navigation-item-number-container'>\n                    <div className = 'num-board'>{length}</div>\n                </div>\n            </div>\n            <div className = 'navigation-item'>\n                <span className = 'navigation-lavel'>Difficulty:</span>\n                <div className = 'navigation-item-number-container'>\n                    <div className = 'num-board'>{difficulty}</div>\n                    <div className = 'difficlty-button-container'>\n                    <div\n               className={`difficulty-button difficulty-up ${upVisibility}`}\n               onClick={onUpDifficulty}\n             ></div>\n             <div\n               className={`difficulty-button difficulty-down ${downVisibility}`}\n               onClick={onDownDifficulty}\n             ></div>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    );\n};\n\nexport default Navigation;","\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n import {\n   faArrowLeft,\n   faArrowUp,\n   faArrowDown,\n   faArrowRight\n } from '@fortawesome/free-solid-svg-icons'\n\n\n\nconst ManipulationPanel = ({onChange}) => {\n    \n    const onUp = () => onChange('up')\n    const onRight = () => onChange('right')\n    const onLeft = () => onChange('left')\n    const onDown = () => onChange('down')\n    return(\n        <div className = \"manipulation-panel\">\n            <button className = 'manipulation-btn btn btn-left'  onClick = {onLeft}>\n            <FontAwesomeIcon icon={faArrowLeft} />\n            </button>\n            <div>\n            <button className = 'manipulation-btn btn btn-up'    onClick = {onUp}>\n            <FontAwesomeIcon icon={faArrowUp} />\n            </button>\n            <button className = 'manipulation-btn btn btn-down'  onClick = {onDown}>\n            <FontAwesomeIcon icon={faArrowDown} />\n            </button>\n            </div>\n            <button className = 'manipulation-btn btn btn-right' onClick = {onRight}>\n            <FontAwesomeIcon icon={faArrowRight} />\n            </button>\n        </div>\n\n    );\n};\n\nexport default ManipulationPanel;","\nimport React  from 'react';\n\nconst Field = ({fields}) => {\n    return(\n        <div className = \"Field\">\n            {\n            fields.map((row) => {\n                return row.map((column) => {\n                return <div className={`dots ${column}`}></div>\n                })\n            })\n            }\n        </div>  \n    );\n};\n\nexport default Field;","import React  from 'react';\n\nconst Button = ({onStop,onStart,status,onRestart}) => {\n    return(\n        <div className = \"button\">\n            {status === \"gameover\"  && <button className = 'btn btn-gameover'  onClick = {onRestart}>Game Over</button>}\n            {status === \"init\"      && <button className = 'btn btn-init'      onClick = {onStart}>start</button>}\n            {status === \"suspended\" && <button className = 'btn btn-suspended' onClick = {onStart}>start</button>}\n            {status === \"playing\"   && <button className = 'btn btn-playing'   onClick = {onStop}>stop</button>}\n        </div>\n    );\n};\n\nexport default Button;","\nexport const getFoodPostion = (fieldSize, excludes) => {\n    while(true) {\n      const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n      const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n      const conflict = excludes.some(item => item.x === x && item.y === y)\n  \n      if (!conflict) {\n        return { x, y };\n      }\n    }\n  }\n\nexport const initFields = (fieldSize,snake) => {\n    const fields = [];\n    for (let i = 0; i < fieldSize; i++) {\n      const cols = new Array(fieldSize).fill('')\n      fields.push(cols)\n    }\n    fields[snake.y][snake.x] = 'snake'\n\n    const food = getFoodPostion(fieldSize,[snake])\n    fields[food.x][food.y] = 'food'\n  \n    return fields\n  }","import React,{useCallback,useState,useEffect} from 'react';\n\nimport Navigation from './components/Navigation';\nimport ManipulationPanel from './components/ManipulationPanel';\nimport Field from './components/Field';\nimport Button from './components/Button';\nimport {initFields,getFoodPostion} from './utils';\n\n\nconst initialPosition = {x:17,y:17};\nconst initialValues = initFields(35,initialPosition);\nconst defaultInterval = 100;\nconst defaultDifficulty = 3;\n\nconst Difficulty = [1000,500,100,50,10]\n\nconst GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspended: 'suspended',\n  gameover: 'gameover'\n})\n\nconst Direction = Object.freeze({\n  up: 'up',\n  right: 'right',\n  left: 'left',\n  down: 'down'\n})\n\nconst OppositeDirection = Object.freeze({\n  up: 'down',\n  right: 'left',\n  left: 'right',\n  down: 'up'\n})\n\nconst Delta = Object.freeze({\n  up: { x: 0, y: -1 },\n  right: { x:  1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 },\n})\n\nconst DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down,\n});\n\nlet timer = undefined;\n\nconst unsubscribe = () => {\n  if(!timer){\n    return\n  }\n  clearInterval(timer)\n}\n\nconst isCollision = (fieldSize,position) => {\n  if (position.y < 0 || position.x < 0) {\n    return true;\n  }\n\n  if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n    return true;\n  }\n\n  return false;\n}\n\nconst isEatingMyself = (fields,position) => {\n    return fields[position.y][position.x] === 'snake'\n}\n\nfunction App() {\n\n  const [fields,setFields] = useState(initialValues);\n  const [body, setBody] = useState([]);\n  const [status,setStatus] = useState(GameStatus.init);\n  const [tick, setTick] = useState(0);\n  const [direction, setDirection] = useState(Direction.up);\n  const [difficulty,setDiffculty] = useState(defaultDifficulty)\n\n  useEffect(() => {\n    const interval = Difficulty[difficulty - 1]\n    setBody([initialPosition])\n    timer = setInterval(() => {\n      setTick(tick => tick +1)\n    }, interval)\n    return unsubscribe\n  },[difficulty])\n\n  useEffect(() => {\n    if (body.length === 0 || status !== GameStatus.playing) {\n      return\n    }\n    const canContinue = handleMoving()\n    if (!canContinue) {\n      unsubscribe()\n      setStatus(GameStatus.gameover)\n    }\n  }, [tick])\n\n  const onStart = () => setStatus(GameStatus.playing)\n  const onStop = () => setStatus(GameStatus.suspended)\n\n  const onRestart = () => {\n    timer = setInterval(() => {\n      setTick(tick => tick +1)\n    },defaultInterval)\n     setDirection(Direction.up)\n     setStatus(GameStatus.init)\n     setBody([initialPosition])\n     setFields(initFields(35, initialPosition))\n  }\n\n  const onChangeDirection = useCallback((newDirection) => {\n    if (status !== GameStatus.playing) {\n      return direction\n    }\n    if (OppositeDirection[direction] === newDirection) {\n      return\n    }\n    setDirection(newDirection)\n  \n  },[direction,status]\n  )\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode];\n      if(!newDirection){\n        return;\n      }\n      onChangeDirection(newDirection);\n    }\n    document.addEventListener('keydown',handleKeyDown);\n    return() => document.removeEventListener('keydown',handleKeyDown)\n  },[onChangeDirection])\n\n  const onChangeDifficulty = useCallback((difficulty) => {\n    if(status !== GameStatus.init){\n        return\n    }\n    if(difficulty < 1 || difficulty >Difficulty.length){\n      return\n    }\n    setDiffculty(difficulty)\n  },[status,difficulty])\n\n  const handleMoving = () => {\n    const { x, y } = body[0]\n    const delta = Delta[direction]\n    const newPosition = {\n      x: x + delta.x,\n      y: y + delta.y\n    }\n    if (isCollision(fields.length, newPosition) || isEatingMyself(fields,newPosition)) {\n      return false\n    }\n    const newBody = [...body]\n    if (fields[newPosition.y][newPosition.x] !== 'food') {\n      const removingTrack = newBody.pop()\n      fields[removingTrack.y][removingTrack.x] = ''\n    } else {\n      const food = getFoodPostion(fields.length, [...newBody, newPosition])\n      fields[food.y][food.x] = 'food'\n     }\n    fields[newPosition.y][newPosition.x] = 'snake'\n    newBody.unshift(newPosition)\n\n    setBody(newBody)\n    setFields(fields)\n    return true\n  }\n  return (\n    <div className=\"App\">\n\n      <header className = \"header\" >\n        <div className = \"title-container\">\n          <h1 className = \"title\">Snake Game</h1>\n        </div>\n        <Navigation \n        length={body.length} \n        difficulty={difficulty}\n        onChangeDifficulty={onChangeDifficulty}\n        />\n      </header>\n\n      <main className = \"main\">\n        <Field fields={fields}/>\n      </main>\n\n      <footer className = \"footer\">\n        <Button \n        status = {status} \n        onStop = {onStop}\n        onStart = {onStart} \n        onRestart = {onRestart} \n        />\n        <ManipulationPanel onChange = {onChangeDirection}/>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}