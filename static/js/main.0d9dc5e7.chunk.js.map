{"version":3,"sources":["utils/index.js","constants/index.js","components/Navigation.js","components/ManipulationPanel.js","components/Field.js","components/Button.js","hooks/useSnakeGame.js","App.js","reportWebVitals.js","index.js"],"names":["getFoodPostion","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","fields","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","OppositeDirection","Delta","DirectionKeyCodeMap","37","38","39","40","Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","Field","map","row","column","Button","onStop","onStart","status","onRestart","timer","undefined","unsubscribe","clearInterval","useSnakeGame","useState","setFields","body","setBody","setStatus","tick","setTick","direction","setDirection","setDiffculty","useEffect","interval","setInterval","handleMoving","updateDirection","useCallback","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","updateDifficulty","delta","newPosition","position","isCollision","isEatingMyself","newBody","removingTrack","pop","unshift","start","stop","reload","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0d9dc5e7.chunk.js","sourcesContent":["\nexport const getFoodPostion = (fieldSize, excludes) => {\n    while(true) {\n      const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n      const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n      const conflict = excludes.some(item => item.x === x && item.y === y)\n  \n      if (!conflict) {\n        return { x, y };\n      }\n    }\n  }\n\n  export const initFields = (fieldSize,snake) => {\n    const fields = [];\n    for (let i = 0; i < fieldSize; i++) {\n      const cols = new Array(fieldSize).fill('')\n      fields.push(cols)\n    }\n    fields[snake.y][snake.x] = 'snake'\n\n    const food = getFoodPostion(fieldSize,[snake])\n    fields[food.x][food.y] = 'food'\n  \n    return fields\n  }\n\nexport const isCollision = (fieldSize,position) => {\n    if (position.y < 0 || position.x < 0) {\n      return true;\n    }\n  \n    if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n      return true;\n    }\n  \n    return false;\n  }\n  \nexport const isEatingMyself = (fields,position) => {\n      return fields[position.y][position.x] === 'snake'\n    }","import {initFields} from '../utils'\n\n\n//定数群\nexport const fieldSize = 35;\nexport const initialPosition = {x:17,y:17};\nexport const initialValues = initFields(fieldSize,initialPosition);\nexport const defaultInterval = 100;\nexport const defaultDifficulty = 3;\nexport const Difficulty = [1000,500,100,50,10]\n\nexport const GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspended: 'suspended',\n  gameover: 'gameover'\n})\n\nexport const Direction = Object.freeze({\n  up: 'up',\n  right: 'right',\n  left: 'left',\n  down: 'down'\n})\n\nexport const OppositeDirection = Object.freeze({\n  up: 'down',\n  right: 'left',\n  left: 'right',\n  down: 'up'\n})\n\nexport const Delta = Object.freeze({\n  up: { x: 0, y: -1 },\n  right: { x:  1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 },\n})\n\nexport const DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down,\n});","import React  from 'react';\nimport {defaultDifficulty,Difficulty} from '../constants';\n\nconst Navigation = ({length,difficulty = defaultDifficulty,onChangeDifficulty}) => {\n\n    const upVisibility = difficulty < Difficulty ? '' : 'is-hidden'\n   const downVisibility = difficulty > 1 ? '' : 'is-hidden'\n   const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\n   const onDownDifficulty = () => onChangeDifficulty(difficulty -1)\n   \n    return(\n        <div className = 'navigation'>\n\n            <div className = 'navigation-item'>\n                <span className = 'navigation-lavel'>Length:</span>\n                <div className = 'navigation-item-number-container'>\n                    <div className = 'num-board'>{length}</div>\n                </div>\n            </div>\n\n            <div className = 'navigation-item'>\n                <span className = 'navigation-lavel'>Difficulty:</span>\n                <div className = 'navigation-item-number-container'>\n                    <div className = 'num-board'>{difficulty}</div>\n                    <div className = 'difficlty-button-container'>\n\n                    <div\n               className={`difficulty-button difficulty-up ${upVisibility}`}\n               onClick={onUpDifficulty}\n             ></div>\n\n             <div\n               className={`difficulty-button difficulty-down ${downVisibility}`}\n               onClick={onDownDifficulty}\n             ></div>\n\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    );\n};\n\nexport default Navigation;","\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n import {\n   faArrowLeft,\n   faArrowUp,\n   faArrowDown,\n   faArrowRight\n } from '@fortawesome/free-solid-svg-icons';\nimport {Direction} from '../constants';\n\n\nconst ManipulationPanel = ({onChange}) => {\n    \n    const onUp = () => onChange(Direction.up)\n    const onRight = () => onChange(Direction.right)\n    const onLeft = () => onChange(Direction.left)\n    const onDown = () => onChange(Direction.down)\n    return(\n        <div className = \"manipulation-panel\">\n            <button className = 'manipulation-btn btn btn-left'  onClick = {onLeft}>\n            <FontAwesomeIcon icon={faArrowLeft} />\n            </button>\n            <div>\n            <button className = 'manipulation-btn btn btn-up'    onClick = {onUp}>\n            <FontAwesomeIcon icon={faArrowUp} />\n            </button>\n            <button className = 'manipulation-btn btn btn-down'  onClick = {onDown}>\n            <FontAwesomeIcon icon={faArrowDown} />\n            </button>\n            </div>\n            <button className = 'manipulation-btn btn btn-right' onClick = {onRight}>\n            <FontAwesomeIcon icon={faArrowRight} />\n            </button>\n        </div>\n\n    );\n};\n\nexport default ManipulationPanel;","\nimport React  from 'react';\n\nconst Field = ({fields}) => {\n    return(\n        <div className = \"Field\">\n            {\n            fields.map((row) => {\n                return row.map((column) => {\n                return <div className={`dots ${column}`}></div>\n                })\n            })\n            }\n        </div>  \n    );\n};\n\nexport default Field;","import React  from 'react';\nimport { GameStatus } from '../constants';\n\nconst Button = ({onStop,onStart,status,onRestart}) => {\n    return(　\n        <div className = \"button\">\n            {status === GameStatus.gameover  && <button className = 'btn btn-gameover'  onClick = {onRestart}>Game Over</button>}\n            {status === GameStatus.init      && <button className = 'btn btn-init'      onClick = {onStart}>start</button>}\n            {status === GameStatus.suspended && <button className = 'btn btn-suspended' onClick = {onStart}>start</button>}\n            {status === GameStatus.playing   && <button className = 'btn btn-playing'   onClick = {onStop}>stop</button>}\n        </div>\n    );\n};\n\nexport default Button;","import { useCallback, useEffect, useState } from 'react';\n\n//stateの初期値の中身\nimport {\n  defaultInterval,\n  defaultDifficulty,\n  initialPosition,\n  initialValues,\n  Delta,\n  Difficulty,\n  Direction,\n  DirectionKeyCodeMap,\n  GameStatus,\n  OppositeDirection,\n} from '../constants';\n\n//メソッド群\nimport {\n  initFields,\n  isCollision,\n  isEatingMyself,\n  getFoodPostion,\n} from '../utils';\n\nlet timer = undefined;\n\nconst unsubscribe = () => {\n  if(!timer){\n    return\n  }\n  clearInterval(timer)\n}\n\nconst useSnakeGame = () => {\n  \n  const [fields,setFields] = useState(initialValues);\n  const [body, setBody] = useState([]);\n  const [status,setStatus] = useState(GameStatus.init);\n  const [tick, setTick] = useState(0);\n  const [direction, setDirection] = useState(Direction.up);\n  const [difficulty,setDiffculty] = useState(defaultDifficulty)\n\n　//useEffectの第一引数は実行する処理、第二引数は頻度\n　//ここではdifficultyが変わった時にこのuseEffectが毎回実行される\n //difficultyの変更でへびの速度が変わる関数\n  useEffect(() => {\n    const interval = Difficulty[difficulty - 1]\n    setBody([initialPosition])\n    timer = setInterval(() => {\n        //一定時間の指定\n      setTick(tick => tick +1)\n    }, interval)\n    return unsubscribe\n  },[difficulty])\n\n\n  useEffect(() => {\n    if (body.length === 0 || status !== GameStatus.playing) {\n      return\n    }\n    const canContinue = handleMoving()\n    if (!canContinue) {\n      unsubscribe()\n      setStatus(GameStatus.gameover)\n    }\n  }, [tick])\n\n  const start = () => setStatus(GameStatus.playing)\n  const stop = () => setStatus(GameStatus.suspended)\n\n  const reload = () => {\n    timer = setInterval(() => {\n      setTick(tick => tick +1)\n    },defaultInterval)\n     setDirection(Direction.up)\n     setStatus(GameStatus.init)\n     setBody([initialPosition])\n     setFields(initFields(35, initialPosition))\n  }\n\n  const updateDirection = useCallback((newDirection) => {\n    if (status !== GameStatus.playing) {\n      return direction\n    }\n    if (OppositeDirection[direction] === newDirection) {\n      return\n    }\n    setDirection(newDirection)\n  \n  },[direction,status]\n  )\n\n  //キーボードで操作するための関数\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode];\n      if(!newDirection){\n        return;\n      }\n      updateDirection(newDirection);\n    }\n    document.addEventListener('keydown',handleKeyDown);\n    return() => document.removeEventListener('keydown',handleKeyDown)\n  },[updateDirection])\n\n  const updateDifficulty = useCallback((difficulty) => {\n    if(status !== GameStatus.init){\n        return\n    }\n    if(difficulty < 1 || difficulty >Difficulty.length){\n      return\n    }\n    setDiffculty(difficulty)\n  },[status,difficulty])\n\n  const handleMoving = () => {\n    const { x, y } = body[0]\n    const delta = Delta[direction]\n    const newPosition = {\n      x: x + delta.x,\n      y: y + delta.y\n    }\n    if (isCollision(fields.length, newPosition) || isEatingMyself(fields,newPosition)) {\n      return false\n    }\n    const newBody = [...body]\n    if (fields[newPosition.y][newPosition.x] !== 'food') {\n      const removingTrack = newBody.pop()\n      fields[removingTrack.y][removingTrack.x] = ''\n    } else {\n      const food = getFoodPostion(fields.length, [...newBody, newPosition])\n      fields[food.y][food.x] = 'food'\n     }\n    fields[newPosition.y][newPosition.x] = 'snake'\n    newBody.unshift(newPosition)\n\n    setBody(newBody)\n    setFields(fields)\n    return true\n  }\n\n  return {\n    body,\n    difficulty,\n    fields,\n    status,\n    start,\n    stop,\n    reload,\n    updateDirection,\n    updateDifficulty,\n  };\n\n}\n\nexport default useSnakeGame;","import React from 'react';\n\nimport Navigation from './components/Navigation';\nimport ManipulationPanel from './components/ManipulationPanel';\nimport Field from './components/Field';\nimport Button from './components/Button';\nimport useSnakeGame from './hooks/useSnakeGame.js'\n\nfunction App() {\n\n  const {\n    body,\n    difficulty,\n    fields,\n    start,\n    stop,\n    reload,\n    status,\n    updateDirection,\n    updateDifficulty,\n  } = useSnakeGame();\n\n  return (\n    <div className=\"App\">\n\n      <header className = \"header\" >\n        <div className = \"title-container\">\n          <h1 className = \"title\">Snake Game</h1>\n        </div>\n        <Navigation \n        length={body.length} \n        difficulty={difficulty}\n        onChangeDifficulty={updateDifficulty}\n        />\n      </header>\n\n      <main className = \"main\">\n        <Field fields={fields}/>\n      </main>\n\n      <footer className = \"footer\">\n        <Button \n        status = {status} \n        onStop = {stop}\n        onStart = {start} \n        onRestart = {reload} \n        />\n        <ManipulationPanel onChange = {updateDirection}/>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}